// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  email String @unique
  password String
  name String @unique
  avatarPath String @default("")
  phone String @default("")

  orders Order[]
  favorites Product[]
}

model Product {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  name String @unique
  slug String @unique
  description String
  price String
  images String[]

  orderItems OrderItem[]
  reviews Review[]

  category Category? @relation(fields: [categoryId], references: [id])
  categoryId Int? @map("category_id")

  user User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Category {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  category Product[]
  name String @unique
}

model Review {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  rating Int
  text String

  product Product? @relation(fields: [productId], references: [id])
  productId Int?
}

model Order {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  status OrderStatus @default(PENDING)
  items OrderItem[]

  user User? @relation(fields: [userId], references: [id])
  userId Int?
}

enum OrderStatus {
  PENDING
  PAYED
  SHIPPED
  DELIVERED
}

model OrderItem {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  quantity Int
  price Int

  order Order? @relation(fields: [orderId], references: [id])
  orderId Int? @map("order_id")

  product Product? @relation(fields: [productId], references: [id])
  productId Int?
}